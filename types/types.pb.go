// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/types.proto

package types

import (
	"fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	"github.com/gogo/protobuf/proto"
	_ "github.com/tendermint/tendermint/abci/types"
	"math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Coin defines a token with a denomination and an amount.
//
// NOTE: The amount field is an Int which implements the custom method
// signatures required by gogoproto.
type Coin struct {
	Denom                string   `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
	Amount               Int      `protobuf:"bytes,2,opt,name=amount,proto3,customtype=Int" json:"amount"`
	//XXX_NoUnkeyedLiteral struct{} `json:"-"`
	//XXX_unrecognized     []byte   `json:"-"`
	//XXX_sizecache        int32    `json:"-"`
}

func (m *Coin) Reset()      { *m = Coin{} }
func (*Coin) ProtoMessage() {}
func (*Coin) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c0f90c600ad7e2e, []int{0}
}
func (m *Coin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Coin.Unmarshal(m, b)
}
func (m *Coin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Coin.Marshal(b, m, deterministic)
}
func (m *Coin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Coin.Merge(m, src)
}
func (m *Coin) XXX_Size() int {
	return xxx_messageInfo_Coin.Size(m)
}
func (m *Coin) XXX_DiscardUnknown() {
	xxx_messageInfo_Coin.DiscardUnknown(m)
}

var xxx_messageInfo_Coin proto.InternalMessageInfo

func (m *Coin) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

// DecCoin defines a token with a denomination and a decimal amount.
//
// NOTE: The amount field is an Dec which implements the custom method
// signatures required by gogoproto.
type DecCoin struct {
	Denom                string   `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
	Amount               Dec      `protobuf:"bytes,2,opt,name=amount,proto3,customtype=Dec" json:"amount"`
	//XXX_NoUnkeyedLiteral struct{} `json:"-"`
	//XXX_unrecognized     []byte   `json:"-"`
	//XXX_sizecache        int32    `json:"-"`
}

func (m *DecCoin) Reset()      { *m = DecCoin{} }
func (*DecCoin) ProtoMessage() {}
func (*DecCoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c0f90c600ad7e2e, []int{1}
}
func (m *DecCoin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecCoin.Unmarshal(m, b)
}
func (m *DecCoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecCoin.Marshal(b, m, deterministic)
}
func (m *DecCoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecCoin.Merge(m, src)
}
func (m *DecCoin) XXX_Size() int {
	return xxx_messageInfo_DecCoin.Size(m)
}
func (m *DecCoin) XXX_DiscardUnknown() {
	xxx_messageInfo_DecCoin.DiscardUnknown(m)
}

var xxx_messageInfo_DecCoin proto.InternalMessageInfo

func (m *DecCoin) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func init() {
	proto.RegisterType((*Coin)(nil), "irishub.Coin")
	proto.RegisterType((*DecCoin)(nil), "irishub.DecCoin")
}

func init() { proto.RegisterFile("types/types.proto", fileDescriptor_2c0f90c600ad7e2e) }

var fileDescriptor_2c0f90c600ad7e2e = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0xa9, 0x2c, 0x48,
	0x2d, 0xd6, 0x07, 0x93, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xec, 0x99, 0x45, 0x99, 0xc5,
	0x19, 0xa5, 0x49, 0x52, 0x6a, 0x25, 0x19, 0x99, 0x45, 0x29, 0xf1, 0x05, 0x89, 0x45, 0x25, 0x95,
	0xfa, 0x60, 0x39, 0xfd, 0xf4, 0xfc, 0xf4, 0x7c, 0x04, 0x0b, 0xa2, 0x41, 0xca, 0x18, 0x53, 0x5d,
	0x49, 0x6a, 0x5e, 0x4a, 0x6a, 0x51, 0x6e, 0x66, 0x5e, 0x89, 0x7e, 0x62, 0x52, 0x72, 0xa6, 0x3e,
	0x86, 0x2d, 0x4a, 0xee, 0x5c, 0x2c, 0xce, 0xf9, 0x99, 0x79, 0x42, 0x22, 0x5c, 0xac, 0x29, 0xa9,
	0x79, 0xf9, 0xb9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x10, 0x8e, 0x90, 0x32, 0x17, 0x5b,
	0x62, 0x6e, 0x7e, 0x69, 0x5e, 0x89, 0x04, 0x13, 0x48, 0xd8, 0x89, 0xfb, 0xc4, 0x3d, 0x79, 0x86,
	0x5b, 0xf7, 0xe4, 0x99, 0x3d, 0xf3, 0x4a, 0x82, 0xa0, 0x52, 0x56, 0x2c, 0x2f, 0x16, 0xc8, 0x33,
	0x2a, 0x79, 0x71, 0xb1, 0xbb, 0xa4, 0x26, 0x93, 0x63, 0x96, 0x4b, 0x6a, 0x32, 0xaa, 0x59, 0x4e,
	0x86, 0x37, 0x1e, 0xca, 0x31, 0x34, 0x3c, 0x92, 0x63, 0x88, 0x52, 0x4f, 0xcf, 0x2c, 0xc9, 0x28,
	0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x07, 0x85, 0x47, 0x5e, 0x6a, 0x89, 0x3e, 0x34, 0x5c, 0x74,
	0x8b, 0x53, 0xb2, 0x75, 0xd3, 0xf3, 0x21, 0xbe, 0x49, 0x62, 0x03, 0x7b, 0xc7, 0x18, 0x10, 0x00,
	0x00, 0xff, 0xff, 0xb6, 0x0b, 0x1c, 0x27, 0x49, 0x01, 0x00, 0x00,
}

func (this *Coin) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Coin)
	if !ok {
		that2, ok := that.(Coin)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Denom != that1.Denom {
		return false
	}
	if !this.Amount.Equal(that1.Amount) {
		return false
	}
	//if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
	//	return false
	//}
	return true
}
func (this *DecCoin) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DecCoin)
	if !ok {
		that2, ok := that.(DecCoin)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Denom != that1.Denom {
		return false
	}
	if !this.Amount.Equal(that1.Amount) {
		return false
	}
	//if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
	//	return false
	//}
	return true
}
